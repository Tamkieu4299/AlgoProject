{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\workplace\\\\projects\\\\algo_projects\\\\mazevisualize\\\\src\\\\Visualize\\\\Visualize.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Node from '../Node/Node';\nimport './Visualize.css';\n\n// Set default values\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst START_NODE_ROW = 10;\nconst START_NODE_COL = 15;\nconst FINISH_NODE_ROW = 10;\nconst FINISH_NODE_COL = 35;\nexport default function Visualize() {\n  _s();\n  const [grid, setGrid] = useState([]);\n  const [mouseIsPressed, setMouseIsPressed] = useState(false);\n\n  // Create node in grid\n  const createNode = (col, row) => {\n    return {\n      col,\n      row,\n      isStart: row === START_NODE_ROW && col === START_NODE_COL,\n      isFinish: row === FINISH_NODE_ROW && col === FINISH_NODE_COL,\n      distance: Infinity,\n      isVisited: false,\n      isWall: false,\n      previousNode: null\n    };\n  };\n\n  // Initial grid\n  const getInitialGrid = () => {\n    const grid = [];\n    for (let row = 0; row < 20; row++) {\n      const currentRow = [];\n      for (let col = 0; col < 50; col++) {\n        currentRow.push(createNode(col, row));\n      }\n      grid.push(currentRow);\n    }\n    return grid;\n  };\n\n  // Change to new grid\n  const getNewGridWithWallToggled = (grid, row, col) => {\n    const newGrid = grid.slice();\n    const node = newGrid[row][col];\n    const newNode = {\n      ...node,\n      isWall: !node.isWall\n    };\n    newGrid[row][col] = newNode;\n    return newGrid;\n  };\n\n  // Mouse handling\n  const handleMouseDown = (row, col) => {\n    const newGrid = getNewGridWithWallToggled(grid, row, col);\n    setGrid(newGrid);\n    setMouseIsPressed(true);\n  };\n  const handleMouseEnter = (row, col) => {\n    if (!mouseIsPressed) return;\n    const newGrid = getNewGridWithWallToggled(grid, row, col);\n    setGrid(newGrid);\n  };\n  const handleMouseUp = () => {\n    setMouseIsPressed(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: grid.map((row, rowIdx) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: row.map((node, nodeIdx) => {\n            const {\n              row,\n              col,\n              isFinish,\n              isStart,\n              isWall\n            } = node;\n            return /*#__PURE__*/_jsxDEV(Node, {\n              col: col,\n              isFinish: isFinish,\n              isStart: isStart,\n              isWall: isWall,\n              mouseIsPressed: mouseIsPressed,\n              onMouseDown: (row, col) => handleMouseDown(row, col),\n              onMouseEnter: (row, col) => handleMouseEnter(row, col),\n              onMouseUp: () => handleMouseUp(),\n              row: row\n            }, nodeIdx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 37\n            }, this);\n          })\n        }, rowIdx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Visualize, \"HhVTAK4U05waTVOob04qpWSAvZw=\");\n_c = Visualize;\nvar _c;\n$RefreshReg$(_c, \"Visualize\");","map":{"version":3,"names":["React","useState","Node","START_NODE_ROW","START_NODE_COL","FINISH_NODE_ROW","FINISH_NODE_COL","Visualize","grid","setGrid","mouseIsPressed","setMouseIsPressed","createNode","col","row","isStart","isFinish","distance","Infinity","isVisited","isWall","previousNode","getInitialGrid","currentRow","push","getNewGridWithWallToggled","newGrid","slice","node","newNode","handleMouseDown","handleMouseEnter","handleMouseUp","map","rowIdx","nodeIdx"],"sources":["C:/Users/Lenovo/Desktop/workplace/projects/algo_projects/mazevisualize/src/Visualize/Visualize.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Node from '../Node/Node';\r\nimport './Visualize.css'\r\n\r\n// Set default values\r\nconst START_NODE_ROW = 10;\r\nconst START_NODE_COL = 15;\r\nconst FINISH_NODE_ROW = 10;\r\nconst FINISH_NODE_COL = 35;\r\n\r\nexport default function Visualize() {\r\n\r\n    const [grid, setGrid] = useState([]);\r\n    const [mouseIsPressed, setMouseIsPressed] = useState(false);\r\n\r\n    // Create node in grid\r\n    const createNode = (col, row) => {\r\n        return {\r\n            col,\r\n            row,\r\n            isStart: row === START_NODE_ROW && col === START_NODE_COL,\r\n            isFinish: row === FINISH_NODE_ROW && col === FINISH_NODE_COL,\r\n            distance: Infinity,\r\n            isVisited: false,\r\n            isWall: false,\r\n            previousNode: null,\r\n        };\r\n    };\r\n\r\n    // Initial grid\r\n    const getInitialGrid = () => {\r\n        const grid = [];\r\n        for (let row = 0; row < 20; row++) {\r\n            const currentRow = [];\r\n            for (let col = 0; col < 50; col++) {\r\n                currentRow.push(createNode(col, row));\r\n            }\r\n            grid.push(currentRow);\r\n        }\r\n        return grid;\r\n    };\r\n\r\n    // Change to new grid\r\n    const getNewGridWithWallToggled = (grid, row, col) => {\r\n        const newGrid = grid.slice();\r\n        const node = newGrid[row][col];\r\n        const newNode = {\r\n            ...node,\r\n            isWall: !node.isWall,\r\n        };\r\n        newGrid[row][col] = newNode;\r\n        return newGrid;\r\n    };\r\n\r\n    // Mouse handling\r\n    const handleMouseDown = (row, col) => {\r\n        const newGrid = getNewGridWithWallToggled(grid, row, col);\r\n        setGrid(newGrid);\r\n        setMouseIsPressed(true);\r\n    }\r\n\r\n    const handleMouseEnter = (row, col) => {\r\n        if (!mouseIsPressed) return;\r\n        const newGrid = getNewGridWithWallToggled(grid, row, col);\r\n        setGrid(newGrid);\r\n    }\r\n\r\n    const handleMouseUp = () => {\r\n        setMouseIsPressed(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* <button onClick={() => this.visualizeDijkstra()}>\r\n            Visualize Dijkstra's Algorithm\r\n          </button> */}\r\n            <div className=\"grid\">\r\n                {grid.map((row, rowIdx) => {\r\n                    return (\r\n                        <div key={rowIdx}>\r\n                            {row.map((node, nodeIdx) => {\r\n                                const { row, col, isFinish, isStart, isWall } = node;\r\n                                return (\r\n                                    <Node\r\n                                        key={nodeIdx}\r\n                                        col={col}\r\n                                        isFinish={isFinish}\r\n                                        isStart={isStart}\r\n                                        isWall={isWall}\r\n                                        mouseIsPressed={mouseIsPressed}\r\n                                        onMouseDown={(row, col) => handleMouseDown(row, col)}\r\n                                        onMouseEnter={(row, col) =>\r\n                                            handleMouseEnter(row, col)\r\n                                        }\r\n                                        onMouseUp={() => handleMouseUp()}\r\n                                        row={row}></Node>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}